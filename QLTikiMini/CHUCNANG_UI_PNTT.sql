USE QLTIKIMINI
GO

/*Kịch bản 1*/

/*REF: https://www.sqlshack.com/sql-while-loop-with-simple-examples/
*/
/*Create account*/
/*Ve phia NBH*/
IF OBJECT_ID('CREATE_ACCOUNT_NBH','P') IS NOT NULL
	DROP PROC CREATE_ACCOUNT_NBH
GO
/****** Object:  StoredProcedure [dbo].[CREATE_ACCOUNT_NBH]    Script Date: 12/25/2020 10:52:13 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CREATE_ACCOUNT_NBH] 
@TENNBH NVARCHAR(50), 
@USERNAMENBH CHAR(20), 
@PASSNBH CHAR(20),
@VAT CHAR(15),
@SDTNBH CHAR(11),
@EMAILNBH CHAR(30),
@MDK_KINHDOANH CHAR(15),
@TENCUAHANG NVARCHAR(50),
@DCHICUAHANG NVARCHAR(100),
@MA_DANHMUCNGANH CHAR(10),
@MA_MHVH CHAR(10),
@RETURNCODE INT OUTPUT,
@RETURNMESS NVARCHAR(500) OUTPUT
AS
BEGIN
		DECLARE @ID_NBH INT;
		DECLARE @COUNT INT = (SELECT COUNT(ID_KH) FROM KHACHHANG)
		DECLARE @ROWOFNBH INT =  (SELECT COUNT(ID_NBH) FROM NHABANHANG)
		WHILE(@COUNT > 0)
		BEGIN
			IF(EXISTS (SELECT * FROM KHACHHANG WHERE KHACHHANG.USERNAME_KH  =  @USERNAMENBH))
			BEGIN
				set @RETURNCODE = 1
				set @RETURNMESS = N'Username của NBH trùng với username của KH. Vui lòng nhập lại'
				RETURN;
			END
			SET @COUNT = @COUNT - 1;
		END
		SET @ID_NBH = @ROWOFNBH + 1;
		INSERT INTO NHABANHANG 
		VALUES(@ID_NBH, @TENNBH, @USERNAMENBH, @PASSNBH, @VAT, @SDTNBH, @EMAILNBH, @MDK_KINHDOANH, @TENCUAHANG, @DCHICUAHANG, @MA_DANHMUCNGANH, @MA_MHVH)
		set @RETURNCODE = 0
		set @RETURNMESS = N'Tạo tài khoản thành công'
	END
GO

/*Về phía khách hàng: ở dưới*/
IF OBJECT_ID('CREATE_ACCOUNT_KH','P') IS NOT NULL
	DROP PROC CREATE_ACCOUNT_KH
GO
/****** Object:  StoredProcedure [dbo].[CREATE_ACCOUNT_KH]    Script Date: 12/25/2020 10:52:13 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [CREATE_ACCOUNT_KH]
@TEN_KH NVARCHAR(50),
@DIACHI_KH NVARCHAR(100),
@GIOITINH_KH BIT = 0,
@EMAIL_KH CHAR(30),
@NGAYSINH_KH SMALLDATETIME = '2000-01-01',
@SDT_KH CHAR(11) ,
@USERNAME_KH CHAR(20),
@PASS_KH CHAR(20),
@MA_HTTT CHAR(10) = 'HTTT001',
@RETURNCODE INT OUTPUT,
@RETURNMESS NVARCHAR(500) OUTPUT
AS
BEGIN
		DECLARE @ID_KH INT;
		DECLARE @COUNT INT = (SELECT COUNT(ID_NBH) FROM NHABANHANG)
		DECLARE @ROWOFKH INT =  (SELECT COUNT(ID_KH) FROM KHACHHANG)
		WHILE(@COUNT > 0)
		BEGIN
			IF(EXISTS (SELECT * FROM NHABANHANG WHERE NHABANHANG.USERNAMENBH =  @USERNAME_KH))
			BEGIN
				set @RETURNCODE = 1
				set @RETURNMESS = N'Username của KHÁCH HÀNG trùng với username của NBH. Vui lòng nhập lại'
				RETURN;
			END
			SET @COUNT = @COUNT - 1;
		END
		SET @ID_KH = @ROWOFKH + 1;
		INSERT INTO KHACHHANG
		VALUES(@ID_KH, @TEN_KH, @DIACHI_KH, @GIOITINH_KH, @EMAIL_KH, @NGAYSINH_KH, @SDT_KH, 
		@USERNAME_KH, @PASS_KH,0,@MA_HTTT)
		set @RETURNCODE = 0
		set @RETURNMESS = N'Tạo tài khoản thành công'
END
GO

/*Giao tác thể hiện chức năng đăng nhập vào hệ thống*/
/*Về phía NBH*/
IF OBJECT_ID('USP_LOGIN_NBH','P') IS NOT NULL
	DROP PROC USP_LOGIN_NBH
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_LOGIN_NBH]
@USERNAMENBH CHAR(20), 
@PASSNBH CHAR(20),
@RETURNCODE INT OUTPUT,
@RETURNMESS NVARCHAR(500) OUTPUT
AS
BEGIN TRANSACTION
	BEGIN TRY
		IF NOT EXISTS (SELECT * FROM NHABANHANG WHERE NHABANHANG.USERNAMENBH = @USERNAMENBH)
		BEGIN
			set @RETURNCODE = 1
			set @RETURNMESS = N'Username không tồn tại';
			rollback transaction;
			return;
		END
		IF NOT EXISTS (SELECT * FROM NHABANHANG WHERE NHABANHANG.USERNAMENBH = @USERNAMENBH AND NHABANHANG.PASSNBH = @PASSNBH)
		BEGIN
			set @RETURNCODE = 1
			set @RETURNMESS = N'Sai mật khẩu';
			rollback transaction;
			return;
		END
	END TRY
	BEGIN CATCH
		set @RETURNCODE = 1
		set @RETURNMESS = N'Lỗi đăng nhập';
		ROLLBACK TRANSACTION;
	END CATCH
	set @RETURNCODE = 0
	set @RETURNMESS = N'Đăng nhập thành công'
COMMIT TRANSACTION
GO

/*Về phía KH*/
IF OBJECT_ID('USP_LOGIN_KH','P') IS NOT NULL
	DROP PROC USP_LOGIN_KH
GO
/****** Object:  StoredProcedure [dbo].[USP_LOGIN_KH]    Script Date: 12/25/2020 10:52:13 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_LOGIN_KH]
@USERNAMEKH CHAR(20), 
@PASSKH CHAR(20),
@RETURNCODE INT OUTPUT,
@RETURNMESS NVARCHAR(500) OUTPUT
AS
	BEGIN TRY
		IF NOT EXISTS (SELECT * FROM KHACHHANG WHERE KHACHHANG.USERNAME_KH = @USERNAMEKH)
		BEGIN
			set @RETURNCODE = 1
			set @RETURNMESS = N'Username không tồn tại';
			return;
		END
		else IF NOT EXISTS (SELECT * FROM KHACHHANG WHERE KHACHHANG.USERNAME_KH = @USERNAMEKH AND KHACHHANG.PASS_KH = @PASSKH)
		BEGIN
			set @RETURNCODE = 1
			set @RETURNMESS = N'Sai mật khẩu';
			return;
		END
		SELECT * FROM KHACHHANG WHERE KHACHHANG.USERNAME_KH = @USERNAMEKH AND KHACHHANG.PASS_KH = @PASSKH
	END TRY
	BEGIN CATCH
		set @RETURNCODE = 1
		set @RETURNMESS = N'Lỗi đăng nhập';
	END CATCH
	set @RETURNCODE = 0
	set @RETURNMESS = N'Đăng nhập thành công'

--USP_LOGIN_KH 'kh1','1', null, null
GO

/****** Object:  StoredProcedure [dbo].[KICHBAN1_GIAKHUYENMAIGIAMDAN]    Script Date: 12/25/2020 10:52:13 AM ******/
IF OBJECT_ID('KICHBAN1_GIAKHUYENMAIGIAMDAN','P') IS NOT NULL
	DROP PROC KICHBAN1_GIAKHUYENMAIGIAMDAN
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE KICHBAN1_GIAKHUYENMAIGIAMDAN
@DANHMUC INT
AS
BEGIN
	IF (@DANHMUC IS NULL)
	BEGIN
		SELECT SANPHAM.ID_SP, SANPHAM.TEN_SPHAM, SANPHAM.GIANIEMYET, SANPHAM.GIAKHUYENMAI, SANPHAM.THOIGIANKM, SANPHAM.HANSUDUNGSP,
		SANPHAM.MOTACHITIET_SP, SANPHAM.GHICHUSPHAM, DANHMUCNGANH.TEN_DMN, THUONGHIEU.TENTH
		FROM SANPHAM, DANHMUCNGANH, THUONGHIEU
		WHERE DANHMUCNGANH.ID_DMN = SANPHAM.ID_DMN AND SANPHAM.ID_TH = THUONGHIEU.ID_TH
		ORDER BY SANPHAM.TEN_SPHAM ASC
	END
	ELSE IF(NOT EXISTS (SELECT * FROM SANPHAM WHERE SANPHAM.ID_DMN = @DANHMUC))
	BEGIN
		PRINT N'Không có sản phẩm tương ứng'
		RETURN;
	END
	ELSE
		SELECT SANPHAM.ID_SP, SANPHAM.TEN_SPHAM, SANPHAM.GIANIEMYET, SANPHAM.GIAKHUYENMAI, SANPHAM.THOIGIANKM, SANPHAM.HANSUDUNGSP,
		SANPHAM.MOTACHITIET_SP, SANPHAM.GHICHUSPHAM, DANHMUCNGANH.TEN_DMN, THUONGHIEU.TENTH
		FROM SANPHAM, DANHMUCNGANH, THUONGHIEU
		WHERE DANHMUCNGANH.ID_DMN = @DANHMUC AND
		SANPHAM.ID_DMN = @DANHMUC AND THUONGHIEU.ID_TH = SANPHAM.ID_TH
		ORDER BY SANPHAM.TEN_SPHAM ASC
END
GO
--EXEC KICHBAN1_GIAKHUYENMAIGIAMDAN NULL
/****** Object:  StoredProcedure [dbo].[KICHBAN1_RATEGIAMGIA]    Script Date: 12/25/2020 10:52:13 AM ******/

IF OBJECT_ID('KICHBAN1_RATEGIAMGIA','P') IS NOT NULL
	DROP PROC KICHBAN1_RATEGIAMGIA
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE KICHBAN1_RATEGIAMGIA
@TILEGIAMGIA SMALLINT = 0
AS
BEGIN
	SELECT ID_VOUCHER, TENVOUCHER, GIATIEN, GIAKHUYENMAI, DKSUDUNG, DACDIEMNOIBAT, THOIHANSUDUNG into #temp
	FROM VOUCHER_D
	WHERE 1 != 1

	DECLARE @MAXID INT, @MINID INT
	DECLARE @GIATIEN FLOAT, @GIAKHUYENMAI FLOAT, @FLAG BIT = 1
	/*Tim chi so lon nhat va be nhat*/
	SELECT @MINID = MIN(VOUCHER_D.ID_VOUCHER), @MAXID = MAX(VOUCHER_D.ID_VOUCHER)
	FROM VOUCHER_D
	/*PRINT N'Danh sách voucher có tỉ lệ khuyến mãi là ' + CONVERT(VARCHAR,@TILEGIAMGIA) + ' %'*/
	WHILE(@MINID > 0 AND @MINID <= @MAXID )
	BEGIN
		SET @GIATIEN = (SELECT VOUCHER_D.GIATIEN FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MINID AND VOUCHER_D.GIAKHUYENMAI <> 0)
		SET @GIAKHUYENMAI= (SELECT VOUCHER_D.GIAKHUYENMAI FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MINID AND VOUCHER_D.GIAKHUYENMAI <> 0)
		DECLARE @RATEGIAMGIATINHDUOC INT
		SET @RATEGIAMGIATINHDUOC = (100 / @GIATIEN) * (@GIATIEN - @GIAKHUYENMAI)
		IF (@RATEGIAMGIATINHDUOC = @TILEGIAMGIA)
		BEGIN 
			insert into #temp
			SELECT ID_VOUCHER, TENVOUCHER, GIATIEN, GIAKHUYENMAI, DKSUDUNG, DACDIEMNOIBAT, THOIHANSUDUNG
			FROM VOUCHER_D
			WHERE VOUCHER_D.ID_VOUCHER = @MINID

			SET @FLAG = 0
		END
		SET @MINID = @MINID + 1;
	END
	select * from #temp
END

GO
EXEC KICHBAN1_RATEGIAMGIA 40

IF OBJECT_ID('KICHBAN1_MUAVOUCHER','P') IS NOT NULL
	DROP PROC KICHBAN1_MUAVOUCHER
GO
/****** Object:  StoredProcedure [dbo].[KICHBAN1_MUAVOUCHER]    Script Date: 12/25/2020 10:52:13 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[KICHBAN1_MUAVOUCHER]
@MAKH INT, @MAVOUCHER INT = NULL, @SOLUONG INT = 1, @DTHOAI CHAR(11),
@RETURNCODE int output, @RETURNMESS nvarchar(500) output
AS
BEGIN
	IF(NOT EXISTS (SELECT * FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MAVOUCHER))
	BEGIN
		set @RETURNCODE = 1;
		set @RETURNMESS = N'Không tồn tại voucher này'
		RETURN;
	END
	IF @SOLUONG <= 0
	BEGIN
		set @RETURNCODE = 1;
		set @RETURNMESS = N'Vui lòng nhập số lượng >=1'
		RETURN;
	END
	--PRINT N'Thông tin chi tiết voucher'
	SELECT * FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MAVOUCHER
	INSERT INTO CHITIETMUAVOUCHER VALUES(@MAKH, @MAVOUCHER,@SOLUONG,@DTHOAI)
	set @RETURNCODE = 0;
	set @RETURNMESS = N'Bạn đã mua voucher thành công!'
	--PRINT N'Thông tin chi tiết sau khi mua voucher'
	SELECT VOUCHER_D.*, KHACHHANG.TEN_KH
	FROM VOUCHER_D, KHACHHANG, CHITIETMUAVOUCHER
	WHERE VOUCHER_D.ID_VOUCHER = CHITIETMUAVOUCHER.ID_VOUCHER AND CHITIETMUAVOUCHER.ID_KH = KHACHHANG.ID_KH
END

GO


DELETE FROM CHITIETMUAVOUCHER
WHERE CHITIETMUAVOUCHER.DIENTHOAINHANMA = '0906857333'


ALTER PROCEDURE KICHBAN1_RATEGIAMGIA
@THUTUBANGHI int = 0,
@TILEGIAMGIA SMALLINT = 0
AS
BEGIN
	SELECT ID_VOUCHER, TENVOUCHER, GIATIEN, GIAKHUYENMAI, DKSUDUNG, DACDIEMNOIBAT, THOIHANSUDUNG into #temp
	FROM VOUCHER_D
	WHERE 1 != 1

	DECLARE @MAXID INT, @MINID INT
	DECLARE @GIATIEN FLOAT, @GIAKHUYENMAI FLOAT, @FLAG BIT = 1
	/*Tim chi so lon nhat va be nhat*/
	SELECT @MINID = MIN(VOUCHER_D.ID_VOUCHER), @MAXID = MAX(VOUCHER_D.ID_VOUCHER)
	FROM VOUCHER_D
	/*PRINT N'Danh sách voucher có tỉ lệ khuyến mãi là ' + CONVERT(VARCHAR,@TILEGIAMGIA) + ' %'*/
	WHILE(@MINID > 0 AND @MINID <= @MAXID )
	BEGIN
		SET @GIATIEN = (SELECT VOUCHER_D.GIATIEN FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MINID AND VOUCHER_D.GIAKHUYENMAI <> 0)
		SET @GIAKHUYENMAI= (SELECT VOUCHER_D.GIAKHUYENMAI FROM VOUCHER_D WHERE VOUCHER_D.ID_VOUCHER = @MINID AND VOUCHER_D.GIAKHUYENMAI <> 0)
		DECLARE @RATEGIAMGIATINHDUOC INT
		SET @RATEGIAMGIATINHDUOC = (100 / @GIATIEN) * (@GIATIEN - @GIAKHUYENMAI)
		IF (@RATEGIAMGIATINHDUOC = @TILEGIAMGIA)
		BEGIN 
			/*Hiển thị danh sách voucher*/
			insert into #temp
			SELECT ID_VOUCHER, TENVOUCHER, GIATIEN, GIAKHUYENMAI, DKSUDUNG, DACDIEMNOIBAT, THOIHANSUDUNG
			FROM VOUCHER_D
			WHERE VOUCHER_D.ID_VOUCHER = @MINID

			SET @FLAG = 0
		END
		SET @MINID = @MINID + 1;
	END
	select * from #temp order by ID_VOUCHER OFFSET @THUTUBANGHI ROWS FETCH NEXT 10 ROWS ONLY
END

EXEC KICHBAN1_RATEGIAMGIA 20,40
--OFFSET: @THUTUBANGHI + 10 --> HIEN THI TIEP 10 SAN PHAM TIEP THEO
--VD: @THUTUBANGHI: 0 --> LIST 10 SP DAU TIEN; @THUTUBANGHI: 10 --> LIST 10 SAN PHAM TIEP THEO; @THUTUBANGHI: 20 --> LIST 10 SAN PHAM TIEP THEO....


ALTER PROCEDURE KICHBAN1_GIAKHUYENMAIGIAMDAN
@THUTUBANGHI int = 0,
@DANHMUC INT
AS
BEGIN
	IF (@DANHMUC IS NULL)
	BEGIN
		SELECT SANPHAM.ID_SP, SANPHAM.TEN_SPHAM, SANPHAM.GIANIEMYET, SANPHAM.GIAKHUYENMAI, SANPHAM.THOIGIANKM, SANPHAM.HANSUDUNGSP,
		SANPHAM.MOTACHITIET_SP, SANPHAM.GHICHUSPHAM, DANHMUCNGANH.TEN_DMN, THUONGHIEU.TENTH
		FROM SANPHAM, DANHMUCNGANH, THUONGHIEU
		WHERE SANPHAM.ID_TH = THUONGHIEU.ID_TH
		ORDER BY SANPHAM.TEN_SPHAM ASC
		OFFSET @THUTUBANGHI ROWS FETCH NEXT 10 ROWS ONLY 
	END
	ELSE
	IF(NOT EXISTS (SELECT * FROM SANPHAM WHERE SANPHAM.ID_DMN = @DANHMUC))
	BEGIN
		PRINT N'Không có sản phẩm tương ứng'
		RETURN;
	END
	ELSE
		SELECT SANPHAM.ID_SP, SANPHAM.TEN_SPHAM, SANPHAM.GIANIEMYET, SANPHAM.GIAKHUYENMAI, SANPHAM.THOIGIANKM, SANPHAM.HANSUDUNGSP,
		SANPHAM.MOTACHITIET_SP, SANPHAM.GHICHUSPHAM, DANHMUCNGANH.TEN_DMN, THUONGHIEU.TENTH
		FROM SANPHAM, DANHMUCNGANH, THUONGHIEU
		WHERE DANHMUCNGANH.ID_DMN = @DANHMUC AND
		SANPHAM.ID_DMN = @DANHMUC AND THUONGHIEU.ID_TH = SANPHAM.ID_TH
		ORDER BY SANPHAM.TEN_SPHAM ASC
		OFFSET @THUTUBANGHI ROWS FETCH NEXT 10 ROWS ONLY 
END

EXEC KICHBAN1_GIAKHUYENMAIGIAMDAN 10,NULL


